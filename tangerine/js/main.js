!function (e) { "use strict"; if (e('ul.nav li a[href="#"]').on("click", function (e) { e.preventDefault() }), e(".nav-wrapper").menumaker({ title: "<span></span>", format: "multitoggle" }), e(e(window)).on("scroll", function () { e("ul.nav").hasClass("open") || e("#menu-button").removeClass("menu-opened") }), e(window).width() >= 992) { e(".menu-trigger").on("click", function () { e(this).toggleClass("active"), e(".main-menu-wrapper").toggleClass("show"), e(".logo-holder").toggleClass("d-none"), e(".nav-wrapper").toggleClass("active") }) } e(window).on("scroll", function () { e(window).scrollTop() < 100 ? e(".header-main").removeClass("sticky fadeInDown animated") : e(".header-main").addClass("sticky fadeInDown animated") }), e("[data-bg-img]").css("background-image", function () { return 'url("' + e(this).data("bg-img") + '")' }).removeAttr("data-bg-img").addClass("bg-img"); var t = e(".banner_slider"); t.on("initialized.owl.carousel changed.owl.carousel", function (t) { if (t.namespace) { var a = t.relatedTarget; e(".slider-counter").html(a.relative(a.current()) + 1 + "<span>/" + a.items().length) } }), t.on("translate.owl.carousel", function (t) { e(".banner_content h1").removeClass("animated fadeInDown"), e(".banner_content p").removeClass("animated fadeInDown"), e(".banner_content .btn").removeClass("animated fadeInDown"), e(".single-banner-image img:not(.banner-icon)").removeClass("animated fadeInUp") }), t.on("translated.owl.carousel", function (t) { e(".banner_content h1").addClass("animated fadeInDown"), e(".banner_content p").addClass("animated fadeInDown"), e(".banner_content .btn").addClass("animated fadeInDown"), e(".single-banner-image img:not(.banner-icon)").addClass("animated fadeInUp") }); var a = function (e, t) { return void 0 === e ? t : e }; e(".owl-carousel").each(function () { var t = e(this); t.owlCarousel({ items: a(t.data("owl-items"), 1), margin: a(t.data("owl-margin"), 0), loop: a(t.data("owl-loop"), !0), smartSpeed: 450, autoplay: a(t.data("owl-autoplay"), !0), autoplayTimeout: a(t.data("owl-speed"), 8e3), center: a(t.data("owl-center"), !1), animateIn: a(t.data("owl-animate-in"), !1), animateOut: a(t.data("owl-animate-out"), !1), nav: a(t.data("owl-nav"), !1), navText: ['<i class="fa fa-angle-left"></i>', '<i class="fa fa-angle-right"></i>'], dots: a(t.data("owl-dots"), !1), responsive: a(t.data("owl-responsive"), {}) }) }), jQuery("img.svg").each(function () { var e = jQuery(this), t = e.attr("id"), a = e.attr("class"), n = e.attr("src"); jQuery.get(n, function (n) { var o = jQuery(n).find("svg"); void 0 !== t && (o = o.attr("id", t)), void 0 !== a && (o = o.attr("class", a + " replaced-svg")), !(o = o.removeAttr("xmlns:a")).attr("viewBox") && o.attr("height") && o.attr("width") && o.attr("viewBox", "0 0 " + o.attr("height") + " " + o.attr("width")), e.replaceWith(o) }, "xml") }); var n, o = e('[data-trigger="map"]'); o.length && (n = o.data("map-options"), window.initMap = function () { o.css("min-height", "600px"), o.each(function () { var t, a, o, l, r = e(this); n = r.data("map-options"), a = parseFloat(n.latitude, 10), o = parseFloat(n.longitude, 10), l = parseFloat(n.zoom, 10), t = new google.maps.Map(r[0], { center: { lat: a, lng: o }, zoom: l, scrollwheel: !1, disableDefaultUI: !0, zoomControl: !0, styles: [{ featureType: "water", elementType: "geometry", stylers: [{ color: "#e9e9e9" }, { lightness: 17 }] }, { featureType: "landscape", elementType: "geometry", stylers: [{ color: "#f5f5f5" }, { lightness: 20 }] }, { featureType: "road.highway", elementType: "geometry.fill", stylers: [{ color: "#ffffff" }, { lightness: 17 }] }, { featureType: "road.highway", elementType: "geometry.stroke", stylers: [{ color: "#ffffff" }, { lightness: 29 }, { weight: .2 }] }, { featureType: "road.arterial", elementType: "geometry", stylers: [{ color: "#ffffff" }, { lightness: 18 }] }, { featureType: "road.local", elementType: "geometry", stylers: [{ color: "#ffffff" }, { lightness: 16 }] }, { featureType: "poi", elementType: "geometry", stylers: [{ color: "#f5f5f5" }, { lightness: 21 }] }, { featureType: "poi.park", elementType: "geometry", stylers: [{ color: "#dedede" }, { lightness: 21 }] }, { elementType: "labels.text.stroke", stylers: [{ visibility: "on" }, { color: "#ffffff" }, { lightness: 16 }] }, { elementType: "labels.text.fill", stylers: [{ saturation: 36 }, { color: "#333333" }, { lightness: 40 }] }, { elementType: "labels.icon", stylers: [{ visibility: "off" }] }, { featureType: "transit", elementType: "geometry", stylers: [{ color: "#f2f2f2" }, { lightness: 19 }] }, { featureType: "administrative", elementType: "geometry.fill", stylers: [{ color: "#fefefe" }, { lightness: 20 }] }, { featureType: "administrative", elementType: "geometry.stroke", stylers: [{ color: "#fefefe" }, { lightness: 17 }, { weight: 1.2 }] }] }), t = new google.maps.Marker({ position: { lat: a, lng: o }, map: t, animation: google.maps.Animation.DROP, draggable: !1, icon: "assets/img/map-marker.png" }) }) }, initMap()), e(window).on("load", function () { e(".preloader").fadeOut(1e3) }), e(".contact-form-wrapper").on("submit", "form", function (t) { t.preventDefault(); var a = e(this); e.post(a.attr("action"), a.serialize(), function (t) { t = e.parseJSON(t), a.parent(".contact-form-wrapper").find(".form-response").html("<span>" + t[1] + "</span>") }) }); var l = e(".back-to-top"); if (l.length) { var r = function () { e(window).scrollTop() > 400 ? l.addClass("show") : l.removeClass("show") }; r(), e(window).on("scroll", function () { r() }), l.on("click", function (t) { t.preventDefault(), e("html,body").animate({ scrollTop: 0 }, 700) }) } }(jQuery);